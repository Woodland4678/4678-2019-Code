// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Commands/MoveArm.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

MoveArm::MoveArm(int btn): frc::Command() {
    m_btn = btn;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::manipulatorArm.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void MoveArm::Initialize() {
    w_encoder = frc::SmartDashboard::GetNumber("Wrist Set Encoder",-1);
    e_encoder = frc::SmartDashboard::GetNumber("Elbow Set Encoder",-1);
    s_encoder = frc::SmartDashboard::GetNumber("Shoulder Set Encoder",-1);

    done = false;
}

// Called repeatedly when this Command is scheduled to run
void MoveArm::Execute() {
        if((m_btn == 0) && (w_encoder != -1)) {
            Robot::manipulatorArm->setWristEncoder(w_encoder);
            done = true;
        }
        else if((m_btn == 1) && (e_encoder != -1)){
            Robot::manipulatorArm->setElbowEncoder(e_encoder);
            done = true;
        }
        else if((m_btn == 2) && (s_encoder != -1)){
            Robot::manipulatorArm->setShoulderEncoder(s_encoder);
            done = true;
        }
        else if (m_btn == 3) {
            double p = frc::SmartDashboard::GetNumber("Set P", 1);
            double i = frc::SmartDashboard::GetNumber("Set I", 0);
            double d = frc::SmartDashboard::GetNumber("Set D", 0);

            Robot::manipulatorArm->setShoulderPID(p,i,d);
            done = true;
        }
        else if (m_btn == 4) {
            done = Robot::manipulatorArm->moveTo(0);
        }
        else if (m_btn == 5) {
            done = Robot::manipulatorArm->moveTo(1);
        }

}

// Make this return true when this Command no longer needs to run execute()
bool MoveArm::IsFinished() {
    return done;
}

// Called once after isFinished returns true
void MoveArm::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void MoveArm::Interrupted() {

}
