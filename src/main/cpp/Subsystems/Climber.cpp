// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Subsystems/Climber.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Climber::Climber() : frc::Subsystem("Climber") {

    stilts.reset(new WPI_TalonSRX(7));
    stilts->EnableCurrentLimit(false);
    stilts->ConfigVoltageCompSaturation(8, 0);
    stilts->EnableVoltageCompensation(true);
    stilts->SetSensorPhase(true);
    stilts->Config_kP(0, 1, 0);
    stilts->Config_kI(0, 0, 0);
    stilts->Config_kD(0, 0, 0);
    stilts->ConfigAllowableClosedloopError(0, 5, 0);
    stilts->ConfigSelectedFeedbackSensor(FeedbackDevice::QuadEncoder, 0, 0);
    stilts->SetStatusFramePeriod(StatusFrame::Status_1_General_, 10, 0);


    int pos = readABSEncoder() % 4096;
    if(pos < 0)
        pos += 4096;
    frc::SmartDashboard::PutNumber("Position Pos ", pos);
    stilts->SetSelectedSensorPosition(pos);
    stilts->GetSensorCollection().SetPulseWidthPosition(pos);

    stilts->Set(ControlMode::Position, -644);
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}

void Climber::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Climber::Periodic() {
    // Put code here to be run every loop
    frc::SmartDashboard::PutNumber("Position Quad ", readTalonSRXEncoder());
    frc::SmartDashboard::PutNumber("Position ABS ", readABSEncoder());
    frc::SmartDashboard::PutNumber("Climber Amps ", stilts->GetOutputCurrent());
}

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


// Put methods for controlling this subsystem
// here. Call these from Commands.

int Climber::readTalonSRXEncoder() {
    return stilts->GetSelectedSensorPosition(0);
}

int Climber::readABSEncoder() {
    return stilts->GetSensorCollection().GetPulseWidthPosition();
}

void Climber::moveTo() {
    //stilts->Set(ControlMode::Position, 28000);
    stilts->Set(ControlMode::Position, -664);
}

void Climber::reset() {
    stilts->Set(ControlMode::Position, -6000);
}

void Climber::testMovement(){
    //stilts->Set(ControlMode::Velocity, 0.5);
}